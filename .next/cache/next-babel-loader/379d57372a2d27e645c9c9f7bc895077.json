{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Character } from \"../formatters/character\";\nimport { House } from \"../formatters/House\";\nvar apiUrl = \"https://api.got.show/api/\";\nexport var getAllCharacters =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var url, res, _ref2, data, formattedData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = apiUrl + \"map/characters\";\n            _context.next = 3;\n            return fetch(url);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            _context.next = 10;\n            return data.map(function (_char) {\n              return new Character(_char);\n            });\n\n          case 10:\n            formattedData = _context.sent;\n            return _context.abrupt(\"return\", formattedData);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllCharacters() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getCharacterBySlug =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(slug) {\n    var url, res, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = apiUrl + \"book/characters/bySlug/\" + slug;\n            _context2.next = 3;\n            return fetch(url);\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", new Character(data));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getCharacterBySlug(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getAllHouses =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var url, res, data, formattedData;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            url = apiUrl + \"show/houses\";\n            _context3.next = 3;\n            return fetch(url);\n\n          case 3:\n            res = _context3.sent;\n            _context3.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context3.sent;\n            _context3.next = 9;\n            return data.map(function (house) {\n              return new House(house);\n            });\n\n          case 9:\n            formattedData = _context3.sent;\n            return _context3.abrupt(\"return\", formattedData);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getAllHouses() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getHouseByName =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(name) {\n    var url, res, data, formattedData;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            url = apiUrl + \"show/houses/\" + name;\n            _context4.next = 3;\n            return fetch(url);\n\n          case 3:\n            res = _context4.sent;\n            _context4.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context4.sent;\n            _context4.next = 9;\n            return data.map(function (house) {\n              return new House(house);\n            });\n\n          case 9:\n            formattedData = _context4.sent;\n            return _context4.abrupt(\"return\", formattedData[0]);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getHouseByName(_x2) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getHouseCharacters =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(name) {\n    var url, res, data, formattedData;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            url = apiUrl + \"book/characters/byHouse/\" + name;\n            _context5.next = 3;\n            return fetch(url);\n\n          case 3:\n            res = _context5.sent;\n            _context5.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context5.sent;\n            _context5.next = 9;\n            return data.map(function (_char2) {\n              return new Character(_char2);\n            });\n\n          case 9:\n            formattedData = _context5.sent;\n            return _context5.abrupt(\"return\", formattedData);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getHouseCharacters(_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/ahmedosama/Workspace/ASOAF/client/index.js"],"names":["fetch","Character","House","apiUrl","getAllCharacters","url","res","json","data","map","char","formattedData","getCharacterBySlug","slug","getAllHouses","house","getHouseByName","name","getHouseCharacters"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { Character } from \"../formatters/character\";\nimport { House } from \"../formatters/House\";\nconst apiUrl = \"https://api.got.show/api/\";\n\nexport const getAllCharacters = async function() {\n  var url = apiUrl + \"map/characters\";\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const formattedData = await data.map(char => new Character(char));\n  return formattedData;\n};\nexport const getCharacterBySlug = async function(slug) {\n  var url = apiUrl + \"book/characters/bySlug/\" + slug;\n  const res = await fetch(url);\n  const data = await res.json();\n  return new Character(data);\n};\nexport const getAllHouses = async function() {\n  var url = apiUrl + \"show/houses\";\n  const res = await fetch(url);\n  const data = await res.json();\n  const formattedData = await data.map(house => new House(house));\n  return formattedData;\n};\nexport const getHouseByName = async function(name) {\n  var url = apiUrl + \"show/houses/\" + name;\n  const res = await fetch(url);\n  const data = await res.json();\n  const formattedData = await data.map(house => new House(house));\n  return formattedData[0];\n};\nexport const getHouseCharacters = async function(name) {\n  var url = apiUrl + \"book/characters/byHouse/\" + name;\n  const res = await fetch(url);\n  const data = await res.json();\n  const formattedData = await data.map(char => new Character(char));\n  return formattedData;\n};\n"]},"metadata":{},"sourceType":"module"}